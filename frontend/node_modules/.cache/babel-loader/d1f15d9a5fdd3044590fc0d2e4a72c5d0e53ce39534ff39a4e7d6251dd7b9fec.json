{"ast":null,"code":"const express = require('express');\nconst router = express.Router();\nconst mongoose = require('mongoose');\n\n// Schema for blood centers\nconst bloodCenterSchema = new mongoose.Schema({\n  name: String,\n  city: String,\n  address: String,\n  phone: String,\n  email: String,\n  hours: String,\n  mapLink: String,\n  services: [String],\n  rating: Number\n});\nconst BloodCenter = mongoose.model('BloodCenter', bloodCenterSchema);\n\n// GET all centers\nrouter.get('/', async (req, res) => {\n  try {\n    const centers = await BloodCenter.find();\n    res.json(centers);\n  } catch (err) {\n    res.status(500).json({\n      error: err.message\n    });\n  }\n});\n\n// Optional: Add a center\nrouter.post('/', async (req, res) => {\n  try {\n    const center = new BloodCenter(req.body);\n    const saved = await center.save();\n    res.status(201).json(saved);\n  } catch (err) {\n    res.status(500).json({\n      error: err.message\n    });\n  }\n});\nmodule.exports = router;","map":{"version":3,"names":["express","require","router","Router","mongoose","bloodCenterSchema","Schema","name","String","city","address","phone","email","hours","mapLink","services","rating","Number","BloodCenter","model","get","req","res","centers","find","json","err","status","error","message","post","center","body","saved","save","module","exports"],"sources":["D:/dharshini/blooddonationtracker/blood-donation-tracker/frontend/src/pages/BloodCenterDirectory.jsx"],"sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst mongoose = require('mongoose');\r\n\r\n// Schema for blood centers\r\nconst bloodCenterSchema = new mongoose.Schema({\r\n  name: String,\r\n  city: String,\r\n  address: String,\r\n  phone: String,\r\n  email: String,\r\n  hours: String,\r\n  mapLink: String,\r\n  services: [String],\r\n  rating: Number,\r\n});\r\n\r\nconst BloodCenter = mongoose.model('BloodCenter', bloodCenterSchema);\r\n\r\n// GET all centers\r\nrouter.get('/', async (req, res) => {\r\n  try {\r\n    const centers = await BloodCenter.find();\r\n    res.json(centers);\r\n  } catch (err) {\r\n    res.status(500).json({ error: err.message });\r\n  }\r\n});\r\n\r\n// Optional: Add a center\r\nrouter.post('/', async (req, res) => {\r\n  try {\r\n    const center = new BloodCenter(req.body);\r\n    const saved = await center.save();\r\n    res.status(201).json(saved);\r\n  } catch (err) {\r\n    res.status(500).json({ error: err.message });\r\n  }\r\n});\r\n\r\nmodule.exports = router;"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;AAC/B,MAAMC,QAAQ,GAAGH,OAAO,CAAC,UAAU,CAAC;;AAEpC;AACA,MAAMI,iBAAiB,GAAG,IAAID,QAAQ,CAACE,MAAM,CAAC;EAC5CC,IAAI,EAAEC,MAAM;EACZC,IAAI,EAAED,MAAM;EACZE,OAAO,EAAEF,MAAM;EACfG,KAAK,EAAEH,MAAM;EACbI,KAAK,EAAEJ,MAAM;EACbK,KAAK,EAAEL,MAAM;EACbM,OAAO,EAAEN,MAAM;EACfO,QAAQ,EAAE,CAACP,MAAM,CAAC;EAClBQ,MAAM,EAAEC;AACV,CAAC,CAAC;AAEF,MAAMC,WAAW,GAAGd,QAAQ,CAACe,KAAK,CAAC,aAAa,EAAEd,iBAAiB,CAAC;;AAEpE;AACAH,MAAM,CAACkB,GAAG,CAAC,GAAG,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAClC,IAAI;IACF,MAAMC,OAAO,GAAG,MAAML,WAAW,CAACM,IAAI,CAAC,CAAC;IACxCF,GAAG,CAACG,IAAI,CAACF,OAAO,CAAC;EACnB,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZJ,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC;MAAEG,KAAK,EAAEF,GAAG,CAACG;IAAQ,CAAC,CAAC;EAC9C;AACF,CAAC,CAAC;;AAEF;AACA3B,MAAM,CAAC4B,IAAI,CAAC,GAAG,EAAE,OAAOT,GAAG,EAAEC,GAAG,KAAK;EACnC,IAAI;IACF,MAAMS,MAAM,GAAG,IAAIb,WAAW,CAACG,GAAG,CAACW,IAAI,CAAC;IACxC,MAAMC,KAAK,GAAG,MAAMF,MAAM,CAACG,IAAI,CAAC,CAAC;IACjCZ,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAACQ,KAAK,CAAC;EAC7B,CAAC,CAAC,OAAOP,GAAG,EAAE;IACZJ,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC;MAAEG,KAAK,EAAEF,GAAG,CAACG;IAAQ,CAAC,CAAC;EAC9C;AACF,CAAC,CAAC;AAEFM,MAAM,CAACC,OAAO,GAAGlC,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}