{"ast":null,"code":"var _jsxFileName = \"D:\\\\dharshini\\\\blooddonationtracker\\\\blood-donation-tracker\\\\frontend\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport io from 'socket.io-client';\nimport { chatAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [socket, setSocket] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [isThinking, setIsThinking] = useState(false);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    // Initialize socket connection (best-effort). Works even if socket is unavailable.\n    const socketUrl = process.env.REACT_APP_SOCKET_URL || (process.env.REACT_APP_API_BASE_URL ? process.env.REACT_APP_API_BASE_URL.replace(/\\/api$/, '') : '') || 'http://localhost:5001';\n    const newSocket = io(socketUrl, {\n      transports: ['websocket', 'polling'],\n      autoConnect: true\n    });\n    setSocket(newSocket);\n\n    // Connection event handlers\n    newSocket.on('connect', () => {\n      console.log('Connected to server');\n      setIsConnected(true);\n\n      // Join room based on user role\n      if (user !== null && user !== void 0 && user.role) {\n        newSocket.emit('join-room', user.role);\n      }\n    });\n    newSocket.on('disconnect', () => {\n      console.log('Disconnected from server');\n      setIsConnected(false);\n    });\n\n    // Message event handler\n    newSocket.on('receive-message', data => {\n      setMessages(prev => [...prev, data]);\n    });\n    return () => {\n      try {\n        newSocket.close();\n      } catch {}\n    };\n  }, [user === null || user === void 0 ? void 0 : user.role]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    // Scroll to bottom when new messages arrive\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n\n    // Always append the user's message locally first\n    const userMessageObj = {\n      message: newMessage.trim(),\n      senderRole: (user === null || user === void 0 ? void 0 : user.role) || 'User',\n      senderName: (user === null || user === void 0 ? void 0 : user.name) || 'You',\n      timestamp: new Date().toISOString()\n    };\n    setMessages(prev => [...prev, userMessageObj]);\n\n    // Best-effort broadcast over socket when available\n    if (socket && socket.connected) {\n      try {\n        socket.emit('send-message', {\n          message: userMessageObj.message,\n          senderRole: userMessageObj.senderRole,\n          senderName: userMessageObj.senderName\n        });\n      } catch {}\n    }\n\n    // Always ask AI using full conversation context (last 12 messages)\n    setIsThinking(true);\n    const recent = [...messages, {\n      role: 'user',\n      content: newMessage.trim()\n    }].slice(-12);\n    const mapped = recent.map(m => {\n      if (m.senderRole) {\n        return {\n          role: m.senderRole === (user === null || user === void 0 ? void 0 : user.role) ? 'user' : 'assistant',\n          content: m.message\n        };\n      }\n      return {\n        role: m.role || 'user',\n        content: m.content\n      };\n    });\n    try {\n      var _res$data;\n      const res = await chatAPI.ask(mapped);\n      const aiReply = ((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.reply) || '';\n      if (aiReply) {\n        setMessages(prev => [...prev, {\n          message: aiReply,\n          senderRole: 'Assistant',\n          senderName: 'Assistant',\n          timestamp: new Date().toISOString()\n        }]);\n      }\n    } catch (err) {\n      console.error('Chat AI error:', err);\n      setMessages(prev => [...prev, {\n        message: 'Sorry, I could not get a response right now. Please try again in a moment.',\n        senderRole: 'Assistant',\n        senderName: 'Assistant',\n        timestamp: new Date().toISOString()\n      }]);\n    } finally {\n      setIsThinking(false);\n      setNewMessage('');\n    }\n  };\n  const formatTime = timestamp => {\n    return new Date(timestamp).toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-96 bg-white rounded-lg border\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-600 text-white p-3 rounded-t-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold\",\n          children: \"Chat Support\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `w-2 h-2 rounded-full mr-2 ${isConnected ? 'bg-green-400' : 'bg-red-400'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm\",\n            children: isConnected ? 'Connected' : 'Disconnected'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto p-4 space-y-3\",\n      children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-500 mt-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No messages yet. Start a conversation!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm mt-2\",\n          children: (user === null || user === void 0 ? void 0 : user.role) === 'Patient' ? 'Ask questions to donors about blood donation or health concerns.' : 'Help patients with their questions about blood donation and health.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this) : messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex ${msg.senderRole === (user === null || user === void 0 ? void 0 : user.role) ? 'justify-end' : 'justify-start'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `max-w-xs px-3 py-2 rounded-lg ${msg.senderRole === (user === null || user === void 0 ? void 0 : user.role) ? 'bg-red-600 text-white' : msg.senderRole === 'Donor' ? 'bg-red-100 text-red-800' : 'bg-gray-100 text-gray-800'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm font-medium mb-1\",\n            children: [msg.senderName, \" (\", msg.senderRole, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm\",\n            children: msg.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs opacity-70 mt-1\",\n            children: formatTime(msg.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this)), isThinking && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-start\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"max-w-xs px-3 py-2 rounded-lg bg-gray-100 text-gray-800\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm font-medium mb-1\",\n            children: \"Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm\",\n            children: \"Typing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      className: \"p-4 border-t\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          placeholder: \"Type your message...\",\n          className: \"flex-1 border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-red-500\",\n          disabled: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !newMessage.trim() || isThinking,\n          className: \"bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed\",\n          children: isThinking ? 'Thinking…' : 'Send'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"lrsjrd1FVsCcwOme7lbZtmTHJjI=\", false, function () {\n  return [useAuth];\n});\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useAuth","io","chatAPI","jsxDEV","_jsxDEV","Chatbot","_s","user","socket","setSocket","messages","setMessages","newMessage","setNewMessage","isConnected","setIsConnected","isThinking","setIsThinking","messagesEndRef","socketUrl","process","env","REACT_APP_SOCKET_URL","REACT_APP_API_BASE_URL","replace","newSocket","transports","autoConnect","on","console","log","role","emit","data","prev","close","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","e","preventDefault","trim","userMessageObj","message","senderRole","senderName","name","timestamp","Date","toISOString","connected","recent","content","slice","mapped","map","m","_res$data","res","ask","aiReply","reply","err","error","formatTime","toLocaleTimeString","hour","minute","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","msg","index","ref","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["D:/dharshini/blooddonationtracker/blood-donation-tracker/frontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport io from 'socket.io-client';\nimport { chatAPI } from '../services/api';\n\nconst Chatbot = () => {\n  const { user } = useAuth();\n  const [socket, setSocket] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [isThinking, setIsThinking] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    // Initialize socket connection (best-effort). Works even if socket is unavailable.\n    const socketUrl = process.env.REACT_APP_SOCKET_URL\n      || (process.env.REACT_APP_API_BASE_URL ? process.env.REACT_APP_API_BASE_URL.replace(/\\/api$/, '') : '')\n      || 'http://localhost:5001';\n    const newSocket = io(socketUrl, { transports: ['websocket', 'polling'], autoConnect: true });\n    setSocket(newSocket);\n\n    // Connection event handlers\n    newSocket.on('connect', () => {\n      console.log('Connected to server');\n      setIsConnected(true);\n      \n      // Join room based on user role\n      if (user?.role) {\n        newSocket.emit('join-room', user.role);\n      }\n    });\n\n    newSocket.on('disconnect', () => {\n      console.log('Disconnected from server');\n      setIsConnected(false);\n    });\n\n    // Message event handler\n    newSocket.on('receive-message', (data) => {\n      setMessages(prev => [...prev, data]);\n    });\n\n    return () => {\n      try { newSocket.close(); } catch {}\n    };\n  }, [user?.role]);\n\n  useEffect(() => {\n    // Scroll to bottom when new messages arrive\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n\n    // Always append the user's message locally first\n    const userMessageObj = {\n      message: newMessage.trim(),\n      senderRole: user?.role || 'User',\n      senderName: user?.name || 'You',\n      timestamp: new Date().toISOString()\n    };\n    setMessages(prev => [...prev, userMessageObj]);\n\n    // Best-effort broadcast over socket when available\n    if (socket && socket.connected) {\n      try {\n        socket.emit('send-message', {\n          message: userMessageObj.message,\n          senderRole: userMessageObj.senderRole,\n          senderName: userMessageObj.senderName\n        });\n      } catch {}\n    }\n\n    // Always ask AI using full conversation context (last 12 messages)\n    setIsThinking(true);\n    const recent = [...messages, { role: 'user', content: newMessage.trim() }].slice(-12);\n    const mapped = recent.map(m => {\n      if (m.senderRole) {\n        return { role: m.senderRole === user?.role ? 'user' : 'assistant', content: m.message };\n      }\n      return { role: m.role || 'user', content: m.content };\n    });\n    try {\n      const res = await chatAPI.ask(mapped);\n      const aiReply = res.data?.reply || '';\n      if (aiReply) {\n        setMessages(prev => [...prev, {\n          message: aiReply,\n          senderRole: 'Assistant',\n          senderName: 'Assistant',\n          timestamp: new Date().toISOString()\n        }]);\n      }\n    } catch (err) {\n      console.error('Chat AI error:', err);\n      setMessages(prev => [...prev, {\n        message: 'Sorry, I could not get a response right now. Please try again in a moment.',\n        senderRole: 'Assistant',\n        senderName: 'Assistant',\n        timestamp: new Date().toISOString()\n      }]);\n    } finally {\n      setIsThinking(false);\n      setNewMessage('');\n    }\n  };\n\n  const formatTime = (timestamp) => {\n    return new Date(timestamp).toLocaleTimeString([], { \n      hour: '2-digit', \n      minute: '2-digit' \n    });\n  };\n\n  return (\n    <div className=\"flex flex-col h-96 bg-white rounded-lg border\">\n      {/* Header */}\n      <div className=\"bg-red-600 text-white p-3 rounded-t-lg\">\n        <div className=\"flex justify-between items-center\">\n          <h3 className=\"font-semibold\">Chat Support</h3>\n          <div className=\"flex items-center\">\n            <div className={`w-2 h-2 rounded-full mr-2 ${isConnected ? 'bg-green-400' : 'bg-red-400'}`}></div>\n            <span className=\"text-sm\">{isConnected ? 'Connected' : 'Disconnected'}</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Messages */}\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-3\">\n        {messages.length === 0 ? (\n          <div className=\"text-center text-gray-500 mt-8\">\n            <p>No messages yet. Start a conversation!</p>\n            <p className=\"text-sm mt-2\">\n              {user?.role === 'Patient' \n                ? 'Ask questions to donors about blood donation or health concerns.'\n                : 'Help patients with their questions about blood donation and health.'\n              }\n            </p>\n          </div>\n        ) : (\n          messages.map((msg, index) => (\n            <div\n              key={index}\n              className={`flex ${msg.senderRole === user?.role ? 'justify-end' : 'justify-start'}`}\n            >\n              <div\n                className={`max-w-xs px-3 py-2 rounded-lg ${\n                  msg.senderRole === user?.role\n                    ? 'bg-red-600 text-white'\n                    : msg.senderRole === 'Donor'\n                    ? 'bg-red-100 text-red-800'\n                    : 'bg-gray-100 text-gray-800'\n                }`}\n              >\n                <div className=\"text-sm font-medium mb-1\">\n                  {msg.senderName} ({msg.senderRole})\n                </div>\n                <div className=\"text-sm\">{msg.message}</div>\n                <div className=\"text-xs opacity-70 mt-1\">\n                  {formatTime(msg.timestamp)}\n                </div>\n              </div>\n            </div>\n          ))\n        )}\n        {isThinking && (\n          <div className=\"flex justify-start\">\n            <div className=\"max-w-xs px-3 py-2 rounded-lg bg-gray-100 text-gray-800\">\n              <div className=\"text-sm font-medium mb-1\">Assistant</div>\n              <div className=\"text-sm\">Typing...</div>\n            </div>\n          </div>\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n\n      {/* Message Input */}\n      <form onSubmit={sendMessage} className=\"p-4 border-t\">\n        <div className=\"flex space-x-2\">\n          <input\n            type=\"text\"\n            value={newMessage}\n            onChange={(e) => setNewMessage(e.target.value)}\n            placeholder=\"Type your message...\"\n            className=\"flex-1 border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-red-500\"\n            disabled={false}\n          />\n          <button\n            type=\"submit\"\n            disabled={!newMessage.trim() || isThinking}\n            className=\"bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            {isThinking ? 'Thinking…' : 'Send'}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}