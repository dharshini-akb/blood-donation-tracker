{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5001/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 10000 // 10 second timeout\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response2;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API calls\nexport const authAPI = {\n  register: userData => api.post('/auth/register', userData),\n  login: credentials => api.post('/auth/login', credentials),\n  getProfile: () => api.get('/auth/me')\n};\n\n// Blood API calls\nexport const bloodAPI = {\n  checkAvailability: bloodGroup => api.get(`/blood/availability/${bloodGroup}`),\n  createRequest: requestData => api.post('/blood/request', requestData),\n  getRequests: () => api.get('/blood/requests'),\n  getMyRequests: () => api.get('/blood/requests/my'),\n  updateRequestStatus: (id, status) => api.put(`/blood/requests/${id}/status`, {\n    status\n  })\n};\n\n// Voluntary Camp API calls\nexport const voluntaryCampAPI = {\n  register: campData => api.post('/voluntary-camp/register', campData),\n  getAll: () => api.get('/voluntary-camp/all'),\n  getPending: () => api.get('/voluntary-camp/pending'),\n  updateStatus: (id, status) => api.put(`/voluntary-camp/${id}/status`, {\n    status\n  })\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","timeout","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","_error$response2","console","data","message","status","removeItem","window","location","href","authAPI","register","userData","post","login","credentials","getProfile","get","bloodAPI","checkAvailability","bloodGroup","createRequest","requestData","getRequests","getMyRequests","updateRequestStatus","id","put","voluntaryCampAPI","campData","getAll","getPending","updateStatus"],"sources":["D:/dharshini/blooddonationtracker/blood-donation-tracker/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:5001/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  timeout: 10000, // 10 second timeout\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    console.error('API Error:', error.response?.data || error.message);\n    \n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API calls\nexport const authAPI = {\n  register: (userData) => api.post('/auth/register', userData),\n  login: (credentials) => api.post('/auth/login', credentials),\n  getProfile: () => api.get('/auth/me'),\n};\n\n// Blood API calls\nexport const bloodAPI = {\n  checkAvailability: (bloodGroup) => api.get(`/blood/availability/${bloodGroup}`),\n  createRequest: (requestData) => api.post('/blood/request', requestData),\n  getRequests: () => api.get('/blood/requests'),\n  getMyRequests: () => api.get('/blood/requests/my'),\n  updateRequestStatus: (id, status) => api.put(`/blood/requests/${id}/status`, { status }),\n};\n\n// Voluntary Camp API calls\nexport const voluntaryCampAPI = {\n  register: (campData) => api.post('/voluntary-camp/register', campData),\n  getAll: () => api.get('/voluntary-camp/all'),\n  getPending: () => api.get('/voluntary-camp/pending'),\n  updateStatus: (id, status) => api.put(`/voluntary-camp/${id}/status`, { status }),\n};\n\nexport default api;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}